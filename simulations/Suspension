#ARCHITECTURE OVERVIEW:
#1. DONE: Import two data files: Rover info and soil info
#   -100% complete:
#       *DONE:implement soil ini file
#2. Compute traction information from solid case
#   -0% complete:
#       *compute maximum thrust function
#       *compute compaction resistance function
#       *compute bulldozing resistance function
#       *compute rolling resistance (use coeff of 0 if negligable) function
#       *compute gravitational resistance function
#       *create aggregate drawbar pull function
#3. Create angle geometry calculator for pivot and 4 bar cases
#   -0% complete:
#       *differentiate from obstacle mode and slope mode
#       *from rover geometry and height, get alpha and beta
#4. Create matrix calculator
#   -1% comlete:
#       *function to generate computation matrix for each scenario:
#           1. rover climbing obstacle of height h lower than radius
#           2. rover climbing obstacle of height h higher than radius
#           3. rover going across a slope
#           4. rover driving straight
#5. create simulation
#   -0% complete:
#       *Calculate drawbar pull for each case mentioned previously
#       *calculate max velocity, acceleration and gradeability
#       *calculate required torque for stall conditions (adhesion based)
#       *calculate stability
#6. create simulation to optimize rover parameters
#   -0% complete:
#       *given rover parameter and acceptable ranges, run through all instances and find ideal case for each performance parameters
#7. optimize four bar rover
#   -0% complete:
#   -Based on previous ideal parameters, using all variable 4 bar variables, find ideal case for each performance parameters

from scipy.optimize import fsolve
import math
import numpy as np
import configparser

def compute_wheel_thrust(vertical_load, sinkage):
    return vertical_load*sinkage

rovconfig = configparser.ConfigParser()
rovconfig.sections()
rovconfig.read('Roverdata.ini')
soilconfig = configparser.ConfigParser()
soilconfig.sections()
soilconfig.read('Soil.ini')
#print('Weight Values (in kg)' in rovconfig)
#print(rovconfig['Weight Values (in kg)']['g'])
#print(rovconfig['Lengths (in m)']['cg_length'])
#print(soilconfig['Bekker parameters']['n'])
obsmatrix = np.empty((15,15))
